/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * r_ApiResponse.h
 *
 * Describes the result of uploading an image resource
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_r_ApiResponse_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_r_ApiResponse_H_


#include <nlohmann/json.hpp>

#include "CppLibcurlOpenAPIClient/ModelBase.h"

#include <string>

namespace org::openapitools::client::model {


/// <summary>
/// Describes the result of uploading an image resource
/// </summary>
class  r_ApiResponse
    : public ModelBase {
public:
    /////////////////////////////////////////////
    /// ModelBase overrides
    nlohmann::json toJson() const override;
    bool fromJson(const nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// r_ApiResponse members

    /// <summary>
    /// 
    /// </summary>
    int32_t getCode() const;
    bool codeIsSet() const;
    void unsetCode();

    void setCode(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    const std::string& getType() const;
    bool typeIsSet() const;
    void unsetType();

    void setType(std::string_view value);

    /// <summary>
    /// 
    /// </summary>
    const std::string& getMessage() const;
    bool messageIsSet() const;
    void unsetMessage();

    void setMessage(std::string_view value);


private:
    int32_t m_Code{ 0 };
    bool m_CodeIsSet{false};
    std::string m_Type{ "" };
    bool m_TypeIsSet{false};
    std::string m_Message{ "" };
    bool m_MessageIsSet{false};
};


}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_r_ApiResponse_H_ */
