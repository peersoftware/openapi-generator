/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.3.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * User.h
 *
 * A User who is purchasing from the pet store
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_User_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_User_H_


#include <nlohmann/json.hpp>

#include "CppLibcurlOpenAPIClient/ModelBase.h"

#include <string>

namespace org::openapitools::client::model {


/// <summary>
/// A User who is purchasing from the pet store
/// </summary>
class  User
    : public ModelBase {
public:
    /////////////////////////////////////////////
    /// ModelBase overrides
    nlohmann::json toJson() const override;
    bool fromJson(const nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// User members

    /// <summary>
    /// 
    /// </summary>
    int64_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    const std::string& getUsername() const;
    bool usernameIsSet() const;
    void unsetUsername();

    void setUsername(std::string_view value);

    /// <summary>
    /// 
    /// </summary>
    const std::string& getFirstName() const;
    bool firstNameIsSet() const;
    void unsetFirstName();

    void setFirstName(std::string_view value);

    /// <summary>
    /// 
    /// </summary>
    const std::string& getLastName() const;
    bool lastNameIsSet() const;
    void unsetLastName();

    void setLastName(std::string_view value);

    /// <summary>
    /// 
    /// </summary>
    const std::string& getEmail() const;
    bool emailIsSet() const;
    void unsetEmail();

    void setEmail(std::string_view value);

    /// <summary>
    /// 
    /// </summary>
    const std::string& getPassword() const;
    bool passwordIsSet() const;
    void unsetPassword();

    void setPassword(std::string_view value);

    /// <summary>
    /// 
    /// </summary>
    const std::string& getPhone() const;
    bool phoneIsSet() const;
    void unsetPhone();

    void setPhone(std::string_view value);

    /// <summary>
    /// User Status
    /// </summary>
    int32_t getUserStatus() const;
    bool userStatusIsSet() const;
    void unsetUserStatus();

    void setUserStatus(int32_t value);


private:
    int64_t m_Id{ 0L };
    bool m_IdIsSet{false};
    std::string m_Username{ "" };
    bool m_UsernameIsSet{false};
    std::string m_FirstName{ "" };
    bool m_FirstNameIsSet{false};
    std::string m_LastName{ "" };
    bool m_LastNameIsSet{false};
    std::string m_Email{ "" };
    bool m_EmailIsSet{false};
    std::string m_Password{ "" };
    bool m_PasswordIsSet{false};
    std::string m_Phone{ "" };
    bool m_PhoneIsSet{false};
    int32_t m_UserStatus{ 0 };
    bool m_UserStatusIsSet{false};
};


}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_User_H_ */
