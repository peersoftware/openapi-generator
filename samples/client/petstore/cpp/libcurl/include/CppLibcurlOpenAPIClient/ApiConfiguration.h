/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ApiConfiguration.h
 *
 * Configuration for API Client.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_ApiConfiguration_H_
#define ORG_OPENAPITOOLS_CLIENT_API_ApiConfiguration_H_



#include <functional>
#include <map>
#include <string>
#include <string_view>

namespace org::openapitools::client::api {

enum class SslVersion {
    TLSv1_0,
    TLSv1_1,
    TLSv1_2,
    TLSv1_3
};

class  ApiConfiguration {
public:
    const std::string &getBaseUrl() const;
    void setBaseUrl(std::string_view value);

    const std::string &getClientCert() const;
    void setClientCert(std::string_view value);

    const std::string &getClientKey() const;
    void setClientKey(std::string_view value);

    const std::string &getCACert() const;
    void setCACert(std::string_view value);

    bool getSkipTlsVerify() const;
    void setSkipTlsVerify(bool value);

    SslVersion getMinimumTls() const;
    void setMinimumTls(SslVersion value);

    const std::string &getAccessToken() const;
    void setAccessToken(std::string_view value);
    const std::map<std::string, std::string, std::less<>> &getApiKeys() const;
    void setApiKeys(const std::map<std::string, std::string, std::less<>> &value);

private:
    std::string m_BaseUrl;
    std::string m_ClientCertFile; /* client certificate */
    std::string m_ClientKeyFile;  /* client private key */
    std::string m_CACertFile;     /* CA certificate */
    bool m_SkipTlsVerify{false};  /* false -- verify server certificate */
                                  /* true -- skip ssl verify for server certificate */
    SslVersion m_minTls{SslVersion::TLSv1_2};

    std::string m_AccessToken;
    std::map<std::string, std::string, std::less<>> m_ApiKeys;
};

}
#endif /* ORG_OPENAPITOOLS_CLIENT_API_ApiConfiguration_H_ */
