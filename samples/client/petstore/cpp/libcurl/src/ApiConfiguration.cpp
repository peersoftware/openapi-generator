/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "CppLibcurlOpenAPIClient/ApiConfiguration.h"

namespace org {
namespace openapitools {
namespace client {
namespace api {

const std::string &ApiConfiguration::getBaseUrl() const { return m_BaseUrl; }

void ApiConfiguration::setBaseUrl(const std::string &value) {
    m_BaseUrl = value;
}

const std::string &ApiConfiguration::getClientCert() const { return m_ClientCertFile; }

void ApiConfiguration::setClientCert(const std::string &value) {
    m_ClientCertFile = value;
}

const std::string &ApiConfiguration::getClientKey() const { return m_ClientKeyFile; }

void ApiConfiguration::setClientKey(const std::string &value) {
    m_ClientKeyFile = value;
}

const std::string &ApiConfiguration::getCACert() const { return m_CACertFile; }

void ApiConfiguration::setCACert(const std::string &value) {
    m_CACertFile = value;
}

bool ApiConfiguration::getSkipTlsVerify() const { return m_SkipTlsVerify; }

void ApiConfiguration::setSkipTlsVerify(bool value) { m_SkipTlsVerify = value; }

const std::map<std::string, std::string> &ApiConfiguration::getApiKeys() const { return m_ApiKeys; }

void ApiConfiguration::setApiKeys(const std::map<std::string, std::string> &value) {
    m_ApiKeys = value;
}

const std::string &ApiConfiguration::getAccessToken() const { return m_AccessToken; }

void ApiConfiguration::setAccessToken(const std::string &value) {
    m_AccessToken = value;
}


}
}
}
}
